{"nodes":[{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-6834-6859-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","content":"enterString(\"\\033[31;m\");","nodeType":"BASE","aggregatorId":"SuccessivePattern-6834-6859-ExpressionStatement"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-6868-6937-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","content":"assertEquals(TextStyle.COLOR_INDEX_FOREGROUND, mTerminal.mForeColor);","nodeType":"BASE","aggregatorId":"SuccessivePattern-6834-6859-ExpressionStatement"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-6834-6859-ExpressionStatement","content":"testSelectGraphics","nodeType":"CONTEXT","aggregatorId":"SuccessivePattern-6834-6859-ExpressionStatement"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-6834-6859-ExpressionStatement","content":"TerminalTest","nodeType":"CONTEXT","aggregatorId":"SuccessivePattern-6834-6859-ExpressionStatement"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-0-13717-CompilationUnit-SuccessivePattern-6834-6859-ExpressionStatement","content":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java","nodeType":"CONTEXT","aggregatorId":"SuccessivePattern-6834-6859-ExpressionStatement"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-6946-6974-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","content":"enterString(\"\\033[31;;41m\");","nodeType":"BASE","aggregatorId":"SuccessivePattern-6834-6859-ExpressionStatement"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-6983-7052-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","content":"assertEquals(TextStyle.COLOR_INDEX_FOREGROUND, mTerminal.mForeColor);","nodeType":"BASE","aggregatorId":"SuccessivePattern-6834-6859-ExpressionStatement"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7061-7099-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","content":"assertEquals(1, mTerminal.mBackColor);","nodeType":"BASE","aggregatorId":"SuccessivePattern-6834-6859-ExpressionStatement"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7108-7131-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","content":"enterString(\"\\033[0m\");","nodeType":"BASE","aggregatorId":"SuccessivePattern-6834-6859-ExpressionStatement"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7140-7209-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","content":"assertEquals(TextStyle.COLOR_INDEX_BACKGROUND, mTerminal.mBackColor);","nodeType":"BASE","aggregatorId":"SuccessivePattern-6834-6859-ExpressionStatement"},{"id":"SuccessivePattern-6834-6859-ExpressionStatement","content":"enterString(\"\\033[31;m\");\nassertEquals(TextStyle.COLOR_INDEX_FOREGROUND, mTerminal.mForeColor);\nenterString(\"\\033[31;;41m\");\nassertEquals(TextStyle.COLOR_INDEX_FOREGROUND, mTerminal.mForeColor);\nassertEquals(1, mTerminal.mBackColor);\nenterString(\"\\033[0m\");\nassertEquals(TextStyle.COLOR_INDEX_BACKGROUND, mTerminal.mBackColor);\nIN\nMETHOD \"testSelectGraphics\"\nIN\nTYPE \"TerminalTest\"\nIN\nFILE \"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java\"\n\n ----- \n\nThe added code appears to be part of a JUnit test case, specifically designed to verify the functionality of a terminal emulator's color handling. \n\n1. **Test foreground color index**: The code first tests the setting of the foreground color by sending the ANSI escape code `\\033[31;m` to the terminal emulator. It then asserts that the `mForeColor` property of the `mTerminal` object is set to `TextStyle.COLOR_INDEX_FOREGROUND`, which suggests that the test is checking if the terminal emulator correctly identifies the foreground color index.\n\n2. **Test foreground and background color indices**: The test then sends the ANSI escape code `\\033[31;;41m` to the terminal emulator, which sets both the foreground and background colors. It asserts that the `mForeColor` property is still set to `TextStyle.COLOR_INDEX_FOREGROUND`, and that the `mBackColor` property is set to `1`, indicating that the test is verifying the correct handling of both foreground and background color indices.\n\n3. **Test color reset**: The code then tests the reset of colors by sending the ANSI escape code `\\033[0m` to the terminal emulator. It asserts that the `mBackColor` property is set to `TextStyle.COLOR_INDEX_BACKGROUND`, indicating that the test is checking if the terminal emulator correctly resets the background color to its default state.\n\nIn summary, the code is designed to test the following specific aspects of the terminal emulator's color handling:\n- Correct identification of the foreground color index\n- Correct handling of both foreground and background color indices\n- Correct reset of colors to their default state.","nodeType":"AGGREGATOR","aggregatorId":"cluster-0"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7805-7837-LineComment-SuccessivePattern-7805-7837-LineComment","content":"// Omitted parameter means zero:","nodeType":"BASE","aggregatorId":"SuccessivePattern-7805-7837-LineComment"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7840-7867-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","content":"enterString(\"\\033[38;5;m\");","nodeType":"BASE","aggregatorId":"SuccessivePattern-7805-7837-LineComment"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-7805-7837-LineComment","content":"testSelectGraphics","nodeType":"CONTEXT","aggregatorId":"SuccessivePattern-7805-7837-LineComment"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-7805-7837-LineComment","content":"TerminalTest","nodeType":"CONTEXT","aggregatorId":"SuccessivePattern-7805-7837-LineComment"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-0-13717-CompilationUnit-SuccessivePattern-7805-7837-LineComment","content":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java","nodeType":"CONTEXT","aggregatorId":"SuccessivePattern-7805-7837-LineComment"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7870-7908-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","content":"assertEquals(0, mTerminal.mForeColor);","nodeType":"BASE","aggregatorId":"SuccessivePattern-7805-7837-LineComment"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7911-7951-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","content":"assertEquals(179, mTerminal.mBackColor);","nodeType":"BASE","aggregatorId":"SuccessivePattern-7805-7837-LineComment"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7954-7981-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","content":"enterString(\"\\033[48;5;m\");","nodeType":"BASE","aggregatorId":"SuccessivePattern-7805-7837-LineComment"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7984-8022-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","content":"assertEquals(0, mTerminal.mForeColor);","nodeType":"BASE","aggregatorId":"SuccessivePattern-7805-7837-LineComment"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-8025-8063-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","content":"assertEquals(0, mTerminal.mBackColor);","nodeType":"BASE","aggregatorId":"SuccessivePattern-7805-7837-LineComment"},{"id":"SuccessivePattern-7805-7837-LineComment","content":"// Omitted parameter means zero:\nenterString(\"\\033[38;5;m\");\nassertEquals(0, mTerminal.mForeColor);\nassertEquals(179, mTerminal.mBackColor);\nenterString(\"\\033[48;5;m\");\nassertEquals(0, mTerminal.mForeColor);\nassertEquals(0, mTerminal.mBackColor);\nIN\nMETHOD \"testSelectGraphics\"\nIN\nTYPE \"TerminalTest\"\nIN\nFILE \"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java\"\n\n ----- \n\nThe added code appears to be a test case for a terminal emulator's color selection functionality. Here are the evident intentions behind this code:\n\n1. **Testing default foreground color**: The first `enterString` call with the parameter \"\\033[38;5;m\" is used to test the default foreground color when no specific color code is provided. The subsequent `assertEquals` calls verify that the foreground color is set to 0, which is likely the default or \"black\" color.\n\n2. **Testing background color selection**: The first `enterString` call with the parameter \"\\033[38;5;m\" also sets the background color to 179, which is verified by the second `assertEquals` call. This suggests that the test is checking if the background color is correctly set when the foreground color is set to its default value.\n\n3. **Testing default background color**: The second `enterString` call with the parameter \"\\033[48;5;m\" is used to test the default background color when no specific color code is provided. The subsequent `assertEquals` calls verify that both the foreground and background colors are set to 0, which is likely the default or \"black\" color for both.\n\n4. **Verifying color code parsing**: The test case is also verifying that the terminal emulator correctly parses the ANSI escape codes for color selection. Specifically, it checks that the \"\\033[38;5;m\" and \"\\033[48;5;m\" codes are correctly interpreted as setting the foreground and background colors, respectively.\n\n5. **Ensuring consistent color behavior**: The test case ensures that the terminal emulator behaves consistently when no explicit color code is provided, and that the default colors are correctly applied in such cases.","nodeType":"AGGREGATOR","aggregatorId":"cluster-0"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9220-9267-LineComment-SuccessivePattern-9220-9267-LineComment","content":"// 24 bit colors, omitted parameter means zero:","nodeType":"BASE","aggregatorId":"SuccessivePattern-9220-9267-LineComment"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9270-9305-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","content":"enterString(\"\\033[38;2;255;127;m\");","nodeType":"BASE","aggregatorId":"SuccessivePattern-9220-9267-LineComment"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-9220-9267-LineComment","content":"testSelectGraphics","nodeType":"CONTEXT","aggregatorId":"SuccessivePattern-9220-9267-LineComment"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-9220-9267-LineComment","content":"TerminalTest","nodeType":"CONTEXT","aggregatorId":"SuccessivePattern-9220-9267-LineComment"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-0-13717-CompilationUnit-SuccessivePattern-9220-9267-LineComment","content":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java","nodeType":"CONTEXT","aggregatorId":"SuccessivePattern-9220-9267-LineComment"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9308-9367-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","content":"expectedForeground = 0xff000000 | (255 << 16) | (127 << 8);","nodeType":"BASE","aggregatorId":"SuccessivePattern-9220-9267-LineComment"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9370-9425-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","content":"assertEquals(expectedForeground, mTerminal.mForeColor);","nodeType":"BASE","aggregatorId":"SuccessivePattern-9220-9267-LineComment"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9428-9483-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","content":"assertEquals(expectedBackground, mTerminal.mBackColor);","nodeType":"BASE","aggregatorId":"SuccessivePattern-9220-9267-LineComment"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9486-9520-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","content":"enterString(\"\\033[38;2;123;;77m\");","nodeType":"BASE","aggregatorId":"SuccessivePattern-9220-9267-LineComment"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9523-9574-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","content":"expectedForeground = 0xff000000 | (123 << 16) | 77;","nodeType":"BASE","aggregatorId":"SuccessivePattern-9220-9267-LineComment"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9577-9632-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","content":"assertEquals(expectedForeground, mTerminal.mForeColor);","nodeType":"BASE","aggregatorId":"SuccessivePattern-9220-9267-LineComment"},{"id":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9635-9690-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","content":"assertEquals(expectedBackground, mTerminal.mBackColor);","nodeType":"BASE","aggregatorId":"SuccessivePattern-9220-9267-LineComment"},{"id":"SuccessivePattern-9220-9267-LineComment","content":"// 24 bit colors, omitted parameter means zero:\nenterString(\"\\033[38;2;255;127;m\");\nexpectedForeground = 0xff000000 | (255 << 16) | (127 << 8);\nassertEquals(expectedForeground, mTerminal.mForeColor);\nassertEquals(expectedBackground, mTerminal.mBackColor);\nenterString(\"\\033[38;2;123;;77m\");\nexpectedForeground = 0xff000000 | (123 << 16) | 77;\nassertEquals(expectedForeground, mTerminal.mForeColor);\nassertEquals(expectedBackground, mTerminal.mBackColor);\nIN\nMETHOD \"testSelectGraphics\"\nIN\nTYPE \"TerminalTest\"\nIN\nFILE \"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java\"\n\n ----- \n\nThe added code appears to be testing the functionality of a terminal emulator in a Java project. Here are the evident intentions behind this code:\n\n1. **Testing 24-bit color support**: The code is testing whether the terminal emulator correctly interprets and applies 24-bit color codes. This is achieved by entering specific ANSI escape sequences (`\\033[38;2;...m`) that define 24-bit colors.\n\n2. **Verifying default color values**: When an ANSI escape sequence omits a color parameter, the code checks if the terminal emulator correctly defaults to zero for the omitted parameter. This is evident in the first test case where the green and blue components are specified, but the red component is implied to be zero.\n\n3. **Testing color code parsing**: The code tests whether the terminal emulator can correctly parse and apply 24-bit color codes with varying parameter orders and omissions. For example, the sequence `\\033[38;2;123;;77m` tests if the terminal emulator can handle a sequence where the green component is omitted.\n\n4. **Verifying foreground and background color separation**: The code checks if the terminal emulator correctly updates the foreground color (`mForeColor`) when a 24-bit color code is applied, while leaving the background color (`mBackColor`) unchanged. This is evident in the repeated assertions for `assertEquals(expectedBackground, mTerminal.mBackColor)`.\n\n5. **Ensuring bitwise color value calculation**: The code verifies that the terminal emulator calculates the 24-bit color value correctly using bitwise operations. The `expectedForeground` variable is calculated by shifting the color components into their correct positions within a 32-bit integer.\n\n6. **Testing edge cases with specific color values**: The code tests the terminal emulator's handling of specific 24-bit color values, such as `(255 << 16) | (127 << 8)` and `(123 << 16) | 77`, to ensure that it can correctly apply a wide range of colors.","nodeType":"AGGREGATOR","aggregatorId":"cluster-0"},{"id":"cluster-0","content":"The collective intent behind these groups of changes is to comprehensively test the color handling functionality of a terminal emulator in a Java project. \n\nSpecifically, the changes aim to:\n\n1. **Verify correct identification and handling of color indices**: The code tests the terminal emulator's ability to correctly identify and handle foreground and background color indices, including the correct reset of colors to their default state.\n\n2. **Validate default color behavior**: The changes ensure that the terminal emulator behaves consistently when no explicit color code is provided, applying default colors correctly in such cases.\n\n3. **Test color selection functionality**: The code verifies that the terminal emulator correctly parses and applies ANSI escape codes for color selection, including the setting of foreground and background colors.\n\n4. **Ensure support for 24-bit color codes**: The changes test whether the terminal emulator correctly interprets and applies 24-bit color codes, including the calculation of color values using bitwise operations.\n\n5. **Verify correct separation of foreground and background colors**: The code checks that the terminal emulator updates the foreground color correctly when a 24-bit color code is applied, while leaving the background color unchanged.\n\n6. **Validate color code parsing with varying parameter orders and omissions**: The changes ensure that the terminal emulator can handle 24-bit color codes with different parameter orders and omissions, correctly defaulting to zero for omitted parameters.\n\n7. **Test edge cases with specific color values**: The code verifies that the terminal emulator can correctly apply a wide range of 24-bit color values, including specific test cases like `(255 << 16) | (127 << 8)` and `(123 << 16) | 77`.\n\nBy addressing these specific aspects of color handling, the changes aim to ensure that the terminal emulator functions correctly and consistently in various scenarios.","nodeType":"AGGREGATOR","aggregatorId":"commit"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-96586-97008-IfStatement-DeclarationPattern-96586-97008-IfStatement","content":"if (color >= 0 && color < TextStyle.NUM_INDEXED_COLORS) {\n                        if (code == 38) {\n                            mForeColor = color;\n                        } else {\n                            mBackColor = color;\n                        }\n                    } else {\n                        if (LOG_ESCAPE_SEQUENCES) Logger.logWarn(mClient, LOG_TAG, \"Invalid color index: \" + color);\n                    }","nodeType":"EXTENSION","aggregatorId":"DeclarationPattern-96586-97008-IfStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92282-98007-MethodDeclaration-DeclarationPattern-96586-97008-IfStatement","content":"selectGraphicRendition","nodeType":"CONTEXT","aggregatorId":"DeclarationPattern-96586-97008-IfStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-202-124145-TypeDeclaration-DeclarationPattern-96586-97008-IfStatement","content":"TerminalEmulator","nodeType":"CONTEXT","aggregatorId":"DeclarationPattern-96586-97008-IfStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-0-124146-CompilationUnit-DeclarationPattern-96586-97008-IfStatement","content":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java","nodeType":"CONTEXT","aggregatorId":"DeclarationPattern-96586-97008-IfStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92554-92585-VariableDeclarationStatement-DeclarationPattern-96586-97008-IfStatement","content":"int code = getArg(i, 0, false);","nodeType":"BASE","aggregatorId":"DeclarationPattern-96586-97008-IfStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-111215-111466-MethodDeclaration-DeclarationPattern-96586-97008-IfStatement","content":"private int getArg(int index, int defaultValue, boolean treatZeroAsDefault) {\n        int result = mArgs[index];\n        if (result < 0 || (result == 0 && treatZeroAsDefault)) {\n            result = defaultValue;\n        }\n        return result;\n    }","nodeType":"EXTENSION","aggregatorId":"DeclarationPattern-96586-97008-IfStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-96490-96526-VariableDeclarationStatement-DeclarationPattern-96586-97008-IfStatement","content":"int color = getArg(i + 2, 0, false);","nodeType":"BASE","aggregatorId":"DeclarationPattern-96586-97008-IfStatement"},{"id":"DeclarationPattern-96586-97008-IfStatement","content":"int code = getArg(i, 0, false);\nAND\nint color = getArg(i + 2, 0, false);\nIN\nMETHOD \"selectGraphicRendition\"\nIN\nTYPE \"TerminalEmulator\"\nIN\nFILE \"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java\"\n\n---\n\nUSED IN:\n\nif (color >= 0 && color < TextStyle.NUM_INDEXED_COLORS) {\n                        if (code == 38) {\n                            mForeColor = color;\n                        } else {\n                            mBackColor = color;\n                        }\n                    } else {\n                        if (LOG_ESCAPE_SEQUENCES) Logger.logWarn(mClient, LOG_TAG, \"Invalid color index: \" + color);\n                    }\nIN\nMETHOD \"selectGraphicRendition\"\nIN\nTYPE \"TerminalEmulator\"\nIN\nFILE \"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java\"\n\n---\n\nDECLARATIONS:\n\nprivate int getArg(int index, int defaultValue, boolean treatZeroAsDefault) {\n        int result = mArgs[index];\n        if (result < 0 || (result == 0 && treatZeroAsDefault)) {\n            result = defaultValue;\n        }\n        return result;\n    }\nIN\nTYPE \"TerminalEmulator\"\nIN\nFILE \"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java\"\n\n ----- \n\nThe changes to the variable declarations in the `selectGraphicRendition` method of the `TerminalEmulator` class appear to serve the following specific purposes:\n\n1. **Retrieve the code argument from the `mArgs` array at index `i` with a default value of 0**: The `code` variable is now assigned the value returned by `getArg(i, 0, false)`, which retrieves the argument at index `i` from the `mArgs` array, defaulting to 0 if the value is negative or not present.\n\n2. **Retrieve the color argument from the `mArgs` array at index `i + 2` with a default value of 0**: The `color` variable is now assigned the value returned by `getArg(i + 2, 0, false)`, which retrieves the argument at index `i + 2` from the `mArgs` array, defaulting to 0 if the value is negative or not present.\n\n3. **Handle missing or invalid code and color arguments**: By using the `getArg` method, the code ensures that if the `code` or `color` argument is missing or has an invalid value (less than 0), it will be replaced with a default value of 0, preventing potential errors or exceptions in subsequent operations.\n\n4. **Prepare for color index validation**: The updated `color` variable declaration is likely intended to be used in the subsequent validation check (`if (color >= 0 && color < TextStyle.NUM_INDEXED_COLORS)`), ensuring that the color index is within the valid range before assigning it to `mForeColor` or `mBackColor`.\n\n5. **Maintain consistency in argument handling**: The use of the `getArg` method for both `code` and `color` variable declarations suggests an intention to maintain consistency in handling arguments, making the code more readable and easier to maintain.","nodeType":"AGGREGATOR","aggregatorId":"TraversalComponent-96586-97008-IfStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95609-95643-VariableDeclarationStatement-SuccessivePattern-95609-95643-VariableDeclarationStatement","content":"int red = getArg(i + 2, 0, false);","nodeType":"BASE","aggregatorId":"SuccessivePattern-95609-95643-VariableDeclarationStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95668-95704-VariableDeclarationStatement-SuccessivePattern-95609-95643-VariableDeclarationStatement","content":"int green = getArg(i + 3, 0, false);","nodeType":"BASE","aggregatorId":"SuccessivePattern-95609-95643-VariableDeclarationStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92282-98007-MethodDeclaration-SuccessivePattern-95609-95643-VariableDeclarationStatement","content":"selectGraphicRendition","nodeType":"CONTEXT","aggregatorId":"SuccessivePattern-95609-95643-VariableDeclarationStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-202-124145-TypeDeclaration-SuccessivePattern-95609-95643-VariableDeclarationStatement","content":"TerminalEmulator","nodeType":"CONTEXT","aggregatorId":"SuccessivePattern-95609-95643-VariableDeclarationStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-0-124146-CompilationUnit-SuccessivePattern-95609-95643-VariableDeclarationStatement","content":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java","nodeType":"CONTEXT","aggregatorId":"SuccessivePattern-95609-95643-VariableDeclarationStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95729-95764-VariableDeclarationStatement-SuccessivePattern-95609-95643-VariableDeclarationStatement","content":"int blue = getArg(i + 4, 0, false);","nodeType":"BASE","aggregatorId":"SuccessivePattern-95609-95643-VariableDeclarationStatement"},{"id":"SuccessivePattern-95609-95643-VariableDeclarationStatement","content":"int red = getArg(i + 2, 0, false);\nint green = getArg(i + 3, 0, false);\nint blue = getArg(i + 4, 0, false);\nIN\nMETHOD \"selectGraphicRendition\"\nIN\nTYPE \"TerminalEmulator\"\nIN\nFILE \"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java\"\n\n ----- \n\nThe added code appears to serve the following purposes:\n\n1. **Extracting RGB color values from arguments**: The code retrieves three integer values (`red`, `green`, and `blue`) from a list of arguments using the `getArg` method, starting from indices `i + 2`, `i + 3`, and `i + 4`, respectively. This suggests that the arguments at these positions represent the red, green, and blue color components.\n\n2. **Setting color values for graphic rendition**: Given the method name `selectGraphicRendition` and the context of a terminal emulator, it is likely that these RGB values will be used to set the color for text or graphics rendering in the terminal.\n\n3. **Configuring terminal display settings**: The `selectGraphicRendition` method is typically used in terminal emulators to configure display settings, such as text color, background color, or other visual attributes. The extracted RGB values might be used to set a specific color scheme or highlight text in the terminal.\n\n4. **Processing command-line arguments**: The use of `getArg` method implies that the code is processing a list of arguments, possibly command-line arguments or escape sequences, to determine the desired color settings for the terminal emulator.\n\n5. **Enhancing terminal emulator functionality**: By adding this code, the terminal emulator (`TerminalEmulator.java`) is likely being enhanced to support more advanced color rendering or custom color schemes, allowing users to personalize their terminal experience.","nodeType":"AGGREGATOR","aggregatorId":"TraversalComponent-95609-95643-VariableDeclarationStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95790-96352-IfStatement-DeclarationPattern-95790-96352-IfStatement","content":"if (red < 0 || green < 0 || blue < 0 || red > 255 || green > 255 || blue > 255) {\n                            finishSequenceAndLogError(\"Invalid RGB: \" + red + \",\" + green + \",\" + blue);\n                        } else {\n                            int argbColor = 0xff000000 | (red << 16) | (green << 8) | blue;\n                            if (code == 38) {\n                                mForeColor = argbColor;\n                            } else {\n                                mBackColor = argbColor;\n                            }\n                        }","nodeType":"EXTENSION","aggregatorId":"DeclarationPattern-95790-96352-IfStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92282-98007-MethodDeclaration-DeclarationPattern-95790-96352-IfStatement","content":"selectGraphicRendition","nodeType":"CONTEXT","aggregatorId":"DeclarationPattern-95790-96352-IfStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-202-124145-TypeDeclaration-DeclarationPattern-95790-96352-IfStatement","content":"TerminalEmulator","nodeType":"CONTEXT","aggregatorId":"DeclarationPattern-95790-96352-IfStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-0-124146-CompilationUnit-DeclarationPattern-95790-96352-IfStatement","content":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java","nodeType":"CONTEXT","aggregatorId":"DeclarationPattern-95790-96352-IfStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95609-95643-VariableDeclarationStatement-DeclarationPattern-95790-96352-IfStatement","content":"int red = getArg(i + 2, 0, false);","nodeType":"BASE","aggregatorId":"DeclarationPattern-95790-96352-IfStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-111215-111466-MethodDeclaration-DeclarationPattern-95790-96352-IfStatement","content":"private int getArg(int index, int defaultValue, boolean treatZeroAsDefault) {\n        int result = mArgs[index];\n        if (result < 0 || (result == 0 && treatZeroAsDefault)) {\n            result = defaultValue;\n        }\n        return result;\n    }","nodeType":"EXTENSION","aggregatorId":"DeclarationPattern-95790-96352-IfStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95668-95704-VariableDeclarationStatement-DeclarationPattern-95790-96352-IfStatement","content":"int green = getArg(i + 3, 0, false);","nodeType":"BASE","aggregatorId":"DeclarationPattern-95790-96352-IfStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92554-92585-VariableDeclarationStatement-DeclarationPattern-95790-96352-IfStatement","content":"int code = getArg(i, 0, false);","nodeType":"BASE","aggregatorId":"DeclarationPattern-95790-96352-IfStatement"},{"id":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95729-95764-VariableDeclarationStatement-DeclarationPattern-95790-96352-IfStatement","content":"int blue = getArg(i + 4, 0, false);","nodeType":"BASE","aggregatorId":"DeclarationPattern-95790-96352-IfStatement"},{"id":"DeclarationPattern-95790-96352-IfStatement","content":"int red = getArg(i + 2, 0, false);\nAND\nint green = getArg(i + 3, 0, false);\nAND\nint code = getArg(i, 0, false);\nAND\nint blue = getArg(i + 4, 0, false);\nIN\nMETHOD \"selectGraphicRendition\"\nIN\nTYPE \"TerminalEmulator\"\nIN\nFILE \"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java\"\n\n---\n\nUSED IN:\n\nif (red < 0 || green < 0 || blue < 0 || red > 255 || green > 255 || blue > 255) {\n                            finishSequenceAndLogError(\"Invalid RGB: \" + red + \",\" + green + \",\" + blue);\n                        } else {\n                            int argbColor = 0xff000000 | (red << 16) | (green << 8) | blue;\n                            if (code == 38) {\n                                mForeColor = argbColor;\n                            } else {\n                                mBackColor = argbColor;\n                            }\n                        }\nIN\nMETHOD \"selectGraphicRendition\"\nIN\nTYPE \"TerminalEmulator\"\nIN\nFILE \"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java\"\n\n---\n\nDECLARATIONS:\n\nprivate int getArg(int index, int defaultValue, boolean treatZeroAsDefault) {\n        int result = mArgs[index];\n        if (result < 0 || (result == 0 && treatZeroAsDefault)) {\n            result = defaultValue;\n        }\n        return result;\n    }\nIN\nTYPE \"TerminalEmulator\"\nIN\nFILE \"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java\"\n\n ----- \n\nThe changes to the variable declarations in the `selectGraphicRendition` method of the `TerminalEmulator` class appear to serve the following specific purposes:\n\n1. **Obtaining color component values from argument array**: The changes to `red`, `green`, and `blue` declarations aim to retrieve the corresponding color component values from an array of arguments `mArgs` using the `getArg` method. The `getArg` method is called with increasing index values (`i + 2`, `i + 3`, and `i + 4`) to fetch the red, green, and blue color components, respectively.\n\n2. **Retrieving the code value from the argument array**: The change to the `code` declaration is intended to obtain a specific code value from the `mArgs` array using the `getArg` method with the index `i`. This code value is later used to determine whether the obtained color should be assigned to the foreground (`mForeColor`) or background (`mBackColor`).\n\n3. **Providing default values for missing or invalid arguments**: By using the `getArg` method, the declarations ensure that if a required argument is missing (i.e., its index is out of bounds) or has an invalid value (less than 0), a default value of 0 will be used instead. This helps prevent potential errors or exceptions that might occur when processing invalid or missing color component values.\n\n4. **Handling zero as a valid color component value**: The `getArg` method is called with `treatZeroAsDefault` set to `false`, indicating that a zero value should be treated as a valid color component value, not as a default value. This allows the color components to have a value of 0, which is a valid value in the RGB color model.\n\nThese changes collectively enable the `selectGraphicRendition` method to correctly parse and process color-related arguments, ensuring that the terminal emulator can accurately render text with the specified colors.","nodeType":"AGGREGATOR","aggregatorId":"TraversalComponent-95609-95643-VariableDeclarationStatement"},{"id":"TraversalComponent-95609-95643-VariableDeclarationStatement","content":"The collective intent behind the changes in the two groups is to enhance the terminal emulator's color rendering capabilities by:\n\n1. **Extracting RGB color values from arguments**: Retrieving red, green, and blue color component values from a list of arguments using the `getArg` method.\n2. **Setting color values for graphic rendition**: Using the extracted RGB values to set the color for text or graphics rendering in the terminal.\n3. **Configuring terminal display settings**: Utilizing the `selectGraphicRendition` method to configure display settings, such as text color, background color, or other visual attributes.\n4. **Providing default values for missing or invalid arguments**: Ensuring that if a required argument is missing or has an invalid value, a default value of 0 will be used instead to prevent potential errors or exceptions.\n5. **Handling zero as a valid color component value**: Treating a zero value as a valid color component value, allowing the color components to have a value of 0, which is a valid value in the RGB color model.\n\nSpecifically, the changes aim to:\n\n* Retrieve color component values (red, green, and blue) from an array of arguments `mArgs` using the `getArg` method.\n* Obtain a code value from the argument array to determine whether the obtained color should be assigned to the foreground (`mForeColor`) or background (`mBackColor`).\n* Enable the `selectGraphicRendition` method to correctly parse and process color-related arguments, ensuring accurate rendering of text with the specified colors.","nodeType":"AGGREGATOR","aggregatorId":"TraversalComponent-96586-97008-IfStatement"},{"id":"TraversalComponent-96586-97008-IfStatement","content":"The collective intent behind the changes in the two groups can be summarized as follows:\n\n1. **Retrieve and validate color-related arguments**: The changes aim to extract color-related values (code, color, red, green, and blue) from the `mArgs` array using the `getArg` method, which provides default values for missing or invalid arguments.\n2. **Assign color values to foreground or background**: The retrieved color values are then used to set the `mForeColor` or `mBackColor` variables, depending on the code value obtained from the argument array.\n3. **Ensure accurate rendering of text with specified colors**: The changes enable the `selectGraphicRendition` method to correctly parse and process color-related arguments, allowing for accurate rendering of text with the specified colors.\n4. **Handle missing or invalid arguments**: The use of the `getArg` method ensures that if a required argument is missing or has an invalid value, a default value of 0 will be used instead, preventing potential errors or exceptions.\n5. **Maintain consistency in argument handling**: The changes promote consistency in handling arguments by using the `getArg` method for retrieving various argument values, making the code more readable and easier to maintain.\n\nThese concrete purposes demonstrate the collective intent behind the changes, focusing on enhancing the terminal emulator's color rendering capabilities while ensuring robustness and consistency in argument handling.","nodeType":"AGGREGATOR","aggregatorId":"cluster-1"},{"id":"cluster-1","content":"The collective intent behind the changes in the two groups can be summarized as follows:\n\n1. **Retrieve and validate color-related arguments**: The changes aim to extract color-related values (code, color, red, green, and blue) from the `mArgs` array using the `getArg` method, which provides default values for missing or invalid arguments.\n2. **Assign color values to foreground or background**: The retrieved color values are then used to set the `mForeColor` or `mBackColor` variables, depending on the code value obtained from the argument array.\n3. **Ensure accurate rendering of text with specified colors**: The changes enable the `selectGraphicRendition` method to correctly parse and process color-related arguments, allowing for accurate rendering of text with the specified colors.\n4. **Handle missing or invalid arguments**: The use of the `getArg` method ensures that if a required argument is missing or has an invalid value, a default value of 0 will be used instead, preventing potential errors or exceptions.\n5. **Maintain consistency in argument handling**: The changes promote consistency in handling arguments by using the `getArg` method for retrieving various argument values, making the code more readable and easier to maintain.\n\nThese concrete purposes demonstrate the collective intent behind the changes, focusing on enhancing the terminal emulator's color rendering capabilities while ensuring robustness and consistency in argument handling.","nodeType":"AGGREGATOR","aggregatorId":"commit"},{"id":"commit","content":"The collective intent behind the changes in these two groups can be summarized as follows:\n\n1. **Comprehensive testing of color handling functionality**: The changes aim to thoroughly test the terminal emulator's color handling capabilities, including the correct identification and handling of color indices, default color behavior, color selection functionality, support for 24-bit color codes, and correct separation of foreground and background colors.\n\n2. **Validation of color code parsing and application**: The changes verify that the terminal emulator can correctly parse and apply ANSI escape codes for color selection, handle 24-bit color codes with varying parameter orders and omissions, and apply a wide range of 24-bit color values.\n\n3. **Robust argument handling for color rendering**: The changes enable the retrieval and validation of color-related arguments, assignment of color values to foreground or background, and accurate rendering of text with specified colors, while ensuring consistent and robust handling of missing or invalid arguments.\n\n4. **Enhancement of color rendering capabilities**: The changes promote the correct interpretation and application of 24-bit color codes, including the calculation of color values using bitwise operations, and the correct updating of foreground color when a 24-bit color code is applied.\n\n5. **Consistency and maintainability in argument handling**: The changes use a consistent approach to handling arguments, using the `getArg` method to retrieve various argument values, making the code more readable and easier to maintain.\n\n6. **Error prevention and exception handling**: The changes ensure that default values are used when required arguments are missing or have invalid values, preventing potential errors or exceptions and promoting the robustness of the terminal emulator's color handling functionality.","nodeType":"AGGREGATOR"}],"edges":[{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-6834-6859-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-6868-6937-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-6834-6859-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-6834-6859-ExpressionStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-6868-6937-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-6834-6859-ExpressionStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-6868-6937-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-6946-6974-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-6834-6859-ExpressionStatement","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-6834-6859-ExpressionStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-6834-6859-ExpressionStatement","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-6834-6859-ExpressionStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-6834-6859-ExpressionStatement","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-0-13717-CompilationUnit-SuccessivePattern-6834-6859-ExpressionStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-6834-6859-ExpressionStatement","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-0-13717-CompilationUnit-SuccessivePattern-6834-6859-ExpressionStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-6946-6974-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-6834-6859-ExpressionStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-6946-6974-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-6983-7052-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-6983-7052-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-6834-6859-ExpressionStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-6983-7052-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-6834-6859-ExpressionStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-6983-7052-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7061-7099-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7061-7099-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-6834-6859-ExpressionStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7061-7099-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7108-7131-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7108-7131-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-6834-6859-ExpressionStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7108-7131-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7140-7209-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7140-7209-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-6834-6859-ExpressionStatement","type":"CONTEXT","weight":1.0},{"sourceId":"SuccessivePattern-6834-6859-ExpressionStatement","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-6834-6859-ExpressionStatement-SuccessivePattern-6834-6859-ExpressionStatement","type":"EXPANSION","weight":1.0},{"sourceId":"cluster-0","targetId":"SuccessivePattern-6834-6859-ExpressionStatement","type":"EXPANSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7805-7837-LineComment-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7840-7867-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7805-7837-LineComment-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-7805-7837-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7840-7867-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-7805-7837-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7840-7867-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-7805-7837-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7840-7867-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7870-7908-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-7805-7837-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-7805-7837-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-7805-7837-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-0-13717-CompilationUnit-SuccessivePattern-7805-7837-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-0-13717-CompilationUnit-SuccessivePattern-7805-7837-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-0-13717-CompilationUnit-SuccessivePattern-7805-7837-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7870-7908-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-7805-7837-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7870-7908-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7911-7951-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7911-7951-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-7805-7837-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7911-7951-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-7805-7837-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7911-7951-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7954-7981-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7954-7981-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-7805-7837-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7954-7981-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7984-8022-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7984-8022-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-7805-7837-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7984-8022-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-8025-8063-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-8025-8063-ExpressionStatement-SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-7805-7837-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"SuccessivePattern-7805-7837-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-7805-7837-LineComment-SuccessivePattern-7805-7837-LineComment","type":"EXPANSION","weight":1.0},{"sourceId":"cluster-0","targetId":"SuccessivePattern-7805-7837-LineComment","type":"EXPANSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9220-9267-LineComment-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9270-9305-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9220-9267-LineComment-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9270-9305-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9270-9305-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9270-9305-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9308-9367-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-0-13717-CompilationUnit-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-0-13717-CompilationUnit-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-0-13717-CompilationUnit-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-0-13717-CompilationUnit-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-76-13716-TypeDeclaration-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-0-13717-CompilationUnit-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9308-9367-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9308-9367-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9308-9367-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9370-9425-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9370-9425-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9370-9425-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9370-9425-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9428-9483-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9428-9483-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9428-9483-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9486-9520-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9486-9520-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9486-9520-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9486-9520-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9523-9574-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9523-9574-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9523-9574-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9577-9632-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9577-9632-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9577-9632-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9635-9690-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9635-9690-ExpressionStatement-SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-5573-9693-MethodDeclaration-SuccessivePattern-9220-9267-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"SuccessivePattern-9220-9267-LineComment","targetId":"terminal-emulator/src/test/java/com/termux/terminal/TerminalTest.java-9220-9267-LineComment-SuccessivePattern-9220-9267-LineComment","type":"EXPANSION","weight":1.0},{"sourceId":"cluster-0","targetId":"SuccessivePattern-9220-9267-LineComment","type":"EXPANSION","weight":1.0},{"sourceId":"commit","targetId":"cluster-0","type":"EXPANSION","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-96586-97008-IfStatement-DeclarationPattern-96586-97008-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92282-98007-MethodDeclaration-DeclarationPattern-96586-97008-IfStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92282-98007-MethodDeclaration-DeclarationPattern-96586-97008-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-202-124145-TypeDeclaration-DeclarationPattern-96586-97008-IfStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-202-124145-TypeDeclaration-DeclarationPattern-96586-97008-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-0-124146-CompilationUnit-DeclarationPattern-96586-97008-IfStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92554-92585-VariableDeclarationStatement-DeclarationPattern-96586-97008-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-96586-97008-IfStatement-DeclarationPattern-96586-97008-IfStatement","type":"DEF_USE","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92554-92585-VariableDeclarationStatement-DeclarationPattern-96586-97008-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92282-98007-MethodDeclaration-DeclarationPattern-96586-97008-IfStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-111215-111466-MethodDeclaration-DeclarationPattern-96586-97008-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-202-124145-TypeDeclaration-DeclarationPattern-96586-97008-IfStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-111215-111466-MethodDeclaration-DeclarationPattern-96586-97008-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92554-92585-VariableDeclarationStatement-DeclarationPattern-96586-97008-IfStatement","type":"DEF_USE","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-111215-111466-MethodDeclaration-DeclarationPattern-96586-97008-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-96490-96526-VariableDeclarationStatement-DeclarationPattern-96586-97008-IfStatement","type":"DEF_USE","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-96490-96526-VariableDeclarationStatement-DeclarationPattern-96586-97008-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-96586-97008-IfStatement-DeclarationPattern-96586-97008-IfStatement","type":"DEF_USE","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-96490-96526-VariableDeclarationStatement-DeclarationPattern-96586-97008-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92282-98007-MethodDeclaration-DeclarationPattern-96586-97008-IfStatement","type":"CONTEXT","weight":1.0},{"sourceId":"DeclarationPattern-96586-97008-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-96586-97008-IfStatement-DeclarationPattern-96586-97008-IfStatement","type":"EXPANSION","weight":1.0},{"sourceId":"TraversalComponent-96586-97008-IfStatement","targetId":"DeclarationPattern-96586-97008-IfStatement","type":"EXPANSION","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95609-95643-VariableDeclarationStatement-SuccessivePattern-95609-95643-VariableDeclarationStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95668-95704-VariableDeclarationStatement-SuccessivePattern-95609-95643-VariableDeclarationStatement","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95609-95643-VariableDeclarationStatement-SuccessivePattern-95609-95643-VariableDeclarationStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92282-98007-MethodDeclaration-SuccessivePattern-95609-95643-VariableDeclarationStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95668-95704-VariableDeclarationStatement-SuccessivePattern-95609-95643-VariableDeclarationStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92282-98007-MethodDeclaration-SuccessivePattern-95609-95643-VariableDeclarationStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95668-95704-VariableDeclarationStatement-SuccessivePattern-95609-95643-VariableDeclarationStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92282-98007-MethodDeclaration-SuccessivePattern-95609-95643-VariableDeclarationStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95668-95704-VariableDeclarationStatement-SuccessivePattern-95609-95643-VariableDeclarationStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95729-95764-VariableDeclarationStatement-SuccessivePattern-95609-95643-VariableDeclarationStatement","type":"SUCCESSION","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92282-98007-MethodDeclaration-SuccessivePattern-95609-95643-VariableDeclarationStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-202-124145-TypeDeclaration-SuccessivePattern-95609-95643-VariableDeclarationStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92282-98007-MethodDeclaration-SuccessivePattern-95609-95643-VariableDeclarationStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-202-124145-TypeDeclaration-SuccessivePattern-95609-95643-VariableDeclarationStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-202-124145-TypeDeclaration-SuccessivePattern-95609-95643-VariableDeclarationStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-0-124146-CompilationUnit-SuccessivePattern-95609-95643-VariableDeclarationStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-202-124145-TypeDeclaration-SuccessivePattern-95609-95643-VariableDeclarationStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-0-124146-CompilationUnit-SuccessivePattern-95609-95643-VariableDeclarationStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95729-95764-VariableDeclarationStatement-SuccessivePattern-95609-95643-VariableDeclarationStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92282-98007-MethodDeclaration-SuccessivePattern-95609-95643-VariableDeclarationStatement","type":"CONTEXT","weight":1.0},{"sourceId":"SuccessivePattern-95609-95643-VariableDeclarationStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95609-95643-VariableDeclarationStatement-SuccessivePattern-95609-95643-VariableDeclarationStatement","type":"EXPANSION","weight":1.0},{"sourceId":"TraversalComponent-95609-95643-VariableDeclarationStatement","targetId":"SuccessivePattern-95609-95643-VariableDeclarationStatement","type":"EXPANSION","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95790-96352-IfStatement-DeclarationPattern-95790-96352-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92282-98007-MethodDeclaration-DeclarationPattern-95790-96352-IfStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92282-98007-MethodDeclaration-DeclarationPattern-95790-96352-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-202-124145-TypeDeclaration-DeclarationPattern-95790-96352-IfStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-202-124145-TypeDeclaration-DeclarationPattern-95790-96352-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-0-124146-CompilationUnit-DeclarationPattern-95790-96352-IfStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95609-95643-VariableDeclarationStatement-DeclarationPattern-95790-96352-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95790-96352-IfStatement-DeclarationPattern-95790-96352-IfStatement","type":"DEF_USE","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95609-95643-VariableDeclarationStatement-DeclarationPattern-95790-96352-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92282-98007-MethodDeclaration-DeclarationPattern-95790-96352-IfStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-111215-111466-MethodDeclaration-DeclarationPattern-95790-96352-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-202-124145-TypeDeclaration-DeclarationPattern-95790-96352-IfStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-111215-111466-MethodDeclaration-DeclarationPattern-95790-96352-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95609-95643-VariableDeclarationStatement-DeclarationPattern-95790-96352-IfStatement","type":"DEF_USE","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-111215-111466-MethodDeclaration-DeclarationPattern-95790-96352-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95668-95704-VariableDeclarationStatement-DeclarationPattern-95790-96352-IfStatement","type":"DEF_USE","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-111215-111466-MethodDeclaration-DeclarationPattern-95790-96352-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92554-92585-VariableDeclarationStatement-DeclarationPattern-95790-96352-IfStatement","type":"DEF_USE","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-111215-111466-MethodDeclaration-DeclarationPattern-95790-96352-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95729-95764-VariableDeclarationStatement-DeclarationPattern-95790-96352-IfStatement","type":"DEF_USE","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95668-95704-VariableDeclarationStatement-DeclarationPattern-95790-96352-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95790-96352-IfStatement-DeclarationPattern-95790-96352-IfStatement","type":"DEF_USE","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95668-95704-VariableDeclarationStatement-DeclarationPattern-95790-96352-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92282-98007-MethodDeclaration-DeclarationPattern-95790-96352-IfStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92554-92585-VariableDeclarationStatement-DeclarationPattern-95790-96352-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95790-96352-IfStatement-DeclarationPattern-95790-96352-IfStatement","type":"DEF_USE","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92554-92585-VariableDeclarationStatement-DeclarationPattern-95790-96352-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92282-98007-MethodDeclaration-DeclarationPattern-95790-96352-IfStatement","type":"CONTEXT","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95729-95764-VariableDeclarationStatement-DeclarationPattern-95790-96352-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95790-96352-IfStatement-DeclarationPattern-95790-96352-IfStatement","type":"DEF_USE","weight":1.0},{"sourceId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95729-95764-VariableDeclarationStatement-DeclarationPattern-95790-96352-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-92282-98007-MethodDeclaration-DeclarationPattern-95790-96352-IfStatement","type":"CONTEXT","weight":1.0},{"sourceId":"DeclarationPattern-95790-96352-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95790-96352-IfStatement-DeclarationPattern-95790-96352-IfStatement","type":"EXPANSION","weight":1.0},{"sourceId":"TraversalComponent-95609-95643-VariableDeclarationStatement","targetId":"DeclarationPattern-95790-96352-IfStatement","type":"EXPANSION","weight":1.0},{"sourceId":"TraversalComponent-95609-95643-VariableDeclarationStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-95609-95643-VariableDeclarationStatement-TraversalComponent-95609-95643-VariableDeclarationStatement","type":"EXPANSION","weight":1.0},{"sourceId":"TraversalComponent-96586-97008-IfStatement","targetId":"TraversalComponent-95609-95643-VariableDeclarationStatement","type":"EXPANSION","weight":1.0},{"sourceId":"TraversalComponent-96586-97008-IfStatement","targetId":"terminal-emulator/src/main/java/com/termux/terminal/TerminalEmulator.java-96586-97008-IfStatement-TraversalComponent-96586-97008-IfStatement","type":"EXPANSION","weight":1.0},{"sourceId":"cluster-1","targetId":"TraversalComponent-96586-97008-IfStatement","type":"EXPANSION","weight":1.0},{"sourceId":"commit","targetId":"cluster-1","type":"EXPANSION","weight":1.0}]}