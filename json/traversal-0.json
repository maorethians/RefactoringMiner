{"nodes":[{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-25224-27091-MethodDeclaration-SingularPattern-25224-27091-MethodDeclaration","content":"/**\n\t\t * {@link DateTimeBean#styleLocalTimeWithFallbackPatternsForPreAndPostJdk20}\n\t\t * configures \"-M\" as the time style to use. Thus, we have to be aware\n\t\t * of the following if we do not configure fallback patterns for parsing.\n\t\t *\n\t\t * <ul>\n\t\t * <li>JDK &le; 19 requires a standard space before the \"PM\".\n\t\t * <li>JDK &ge; 20 requires a narrow non-breaking space (NNBSP) before the \"PM\".\n\t\t * </ul>\n\t\t *\n\t\t * <p>To avoid compatibility issues between JDK versions, we have configured\n\t\t * two fallback patterns which emulate the \"-M\" style: <code>\"HH:mm:ss a\"</code>\n\t\t * matches against a standard space before the \"PM\", and <code>\"HH:mm:ss&#92;u202Fa\"</code>\n\t\t * matches against a narrow non-breaking space (NNBSP) before the \"PM\".\n\t\t *\n\t\t * <p>Thus, the following should theoretically be supported on any JDK (or at least\n\t\t * JDK 17 - 23, where we have tested it).\n\t\t */\n\t\t@ParameterizedTest(name = \"input date: {0}\")  // gh-33151\n\t\t@ValueSource(strings = { \"12:00:00 PM\", \"12:00:00\\u202FPM\" })\n\t\tvoid styleLocalTime_PreAndPostJdk20(String propertyValue) {\n\t\t\tString propertyName = \"styleLocalTimeWithFallbackPatternsForPreAndPostJdk20\";\n\t\t\tMutablePropertyValues propertyValues = new MutablePropertyValues();\n\t\t\tpropertyValues.add(propertyName, propertyValue);\n\t\t\tbinder.bind(propertyValues);\n\t\t\tBindingResult bindingResult = binder.getBindingResult();\n\t\t\tassertThat(bindingResult.getErrorCount()).isEqualTo(0);\n\t\t\tString value = binder.getBindingResult().getFieldValue(propertyName).toString();\n\t\t\t// Since the \"-M\" style is always used for printing and the underlying format\n\t\t\t// changes depending on the JDK version, we cannot be certain that a normal\n\t\t\t// space is used before the \"PM\". Consequently we have to use a regular\n\t\t\t// expression to match against any Unicode space character (\\p{Zs}).\n\t\t\tassertThat(value).matches(\"12:00:00\\\\p{Zs}PM\");\n\t\t}","isContext":false,"isAggregator":false,"aggregatorId":"SingularPattern-25224-27091-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-22817-29816-TypeDeclaration-SingularPattern-25224-27091-MethodDeclaration","content":"FallbackPatternTests","isContext":true,"isAggregator":false,"aggregatorId":"SingularPattern-25224-27091-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-2458-37167-TypeDeclaration-SingularPattern-25224-27091-MethodDeclaration","content":"DateTimeFormattingTests","isContext":true,"isAggregator":false,"aggregatorId":"SingularPattern-25224-27091-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-0-37168-CompilationUnit-SingularPattern-25224-27091-MethodDeclaration","content":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java","isContext":true,"isAggregator":false,"aggregatorId":"SingularPattern-25224-27091-MethodDeclaration"},{"id":"SingularPattern-25224-27091-MethodDeclaration","content":"/**\n\t\t * {@link DateTimeBean#styleLocalTimeWithFallbackPatternsForPreAndPostJdk20}\n\t\t * configures \"-M\" as the time style to use. Thus, we have to be aware\n\t\t * of the following if we do not configure fallback patterns for parsing.\n\t\t *\n\t\t * <ul>\n\t\t * <li>JDK &le; 19 requires a standard space before the \"PM\".\n\t\t * <li>JDK &ge; 20 requires a narrow non-breaking space (NNBSP) before the \"PM\".\n\t\t * </ul>\n\t\t *\n\t\t * <p>To avoid compatibility issues between JDK versions, we have configured\n\t\t * two fallback patterns which emulate the \"-M\" style: <code>\"HH:mm:ss a\"</code>\n\t\t * matches against a standard space before the \"PM\", and <code>\"HH:mm:ss&#92;u202Fa\"</code>\n\t\t * matches against a narrow non-breaking space (NNBSP) before the \"PM\".\n\t\t *\n\t\t * <p>Thus, the following should theoretically be supported on any JDK (or at least\n\t\t * JDK 17 - 23, where we have tested it).\n\t\t */\n\t\t@ParameterizedTest(name = \"input date: {0}\")  // gh-33151\n\t\t@ValueSource(strings = { \"12:00:00 PM\", \"12:00:00\\u202FPM\" })\n\t\tvoid styleLocalTime_PreAndPostJdk20(String propertyValue) {\n\t\t\tString propertyName = \"styleLocalTimeWithFallbackPatternsForPreAndPostJdk20\";\n\t\t\tMutablePropertyValues propertyValues = new MutablePropertyValues();\n\t\t\tpropertyValues.add(propertyName, propertyValue);\n\t\t\tbinder.bind(propertyValues);\n\t\t\tBindingResult bindingResult = binder.getBindingResult();\n\t\t\tassertThat(bindingResult.getErrorCount()).isEqualTo(0);\n\t\t\tString value = binder.getBindingResult().getFieldValue(propertyName).toString();\n\t\t\t// Since the \"-M\" style is always used for printing and the underlying format\n\t\t\t// changes depending on the JDK version, we cannot be certain that a normal\n\t\t\t// space is used before the \"PM\". Consequently we have to use a regular\n\t\t\t// expression to match against any Unicode space character (\\p{Zs}).\n\t\t\tassertThat(value).matches(\"12:00:00\\\\p{Zs}PM\");\n\t\t}\nIN\nTYPE \"FallbackPatternTests\"\nIN\nTYPE \"DateTimeFormattingTests\"\nIN\nFILE \"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java\"","isContext":false,"isAggregator":true},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-22618-22762-MethodDeclaration-SingularPattern-22618-22762-MethodDeclaration","content":"public Date getPatternDateTimeWithFallbackPatternForPreAndPostJdk20() {\n\t\t\treturn this.patternDateTimeWithFallbackPatternForPreAndPostJdk20;\n\t\t}","isContext":false,"isAggregator":false,"aggregatorId":"SingularPattern-22618-22762-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-SingularPattern-22618-22762-MethodDeclaration","content":"SimpleDateBean","isContext":true,"isAggregator":false,"aggregatorId":"SingularPattern-22618-22762-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-SingularPattern-22618-22762-MethodDeclaration","content":"DateFormattingTests","isContext":true,"isAggregator":false,"aggregatorId":"SingularPattern-22618-22762-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-0-23766-CompilationUnit-SingularPattern-22618-22762-MethodDeclaration","content":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java","isContext":true,"isAggregator":false,"aggregatorId":"SingularPattern-22618-22762-MethodDeclaration"},{"id":"SingularPattern-22618-22762-MethodDeclaration","content":"public Date getPatternDateTimeWithFallbackPatternForPreAndPostJdk20() {\n\t\t\treturn this.patternDateTimeWithFallbackPatternForPreAndPostJdk20;\n\t\t}\nIN\nTYPE \"SimpleDateBean\"\nIN\nTYPE \"DateFormattingTests\"\nIN\nFILE \"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java\"","isContext":false,"isAggregator":true},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-15707-17148-MethodDeclaration-SingularPattern-15707-17148-MethodDeclaration","content":"/**\n\t\t * To avoid the use of Locale-based styles (such as \"MM\") for\n\t\t * {@link SimpleDateBean#patternDateTimeWithFallbackPatternForPreAndPostJdk20}, we have configured a\n\t\t * primary pattern (<code>\"MM/dd/yy h:mm a\"</code>) that matches against a standard space\n\t\t * before the \"PM\" and a fallback pattern (<code>\"MM/dd/yy h:mm&#92;u202Fa\"</code> that matches\n\t\t * against a narrow non-breaking space (NNBSP) before the \"PM\".\n\t\t *\n\t\t * <p>Thus, the following should theoretically be supported on any JDK (or at least\n\t\t * JDK 17 - 23, where we have tested it).\n\t\t *\n\t\t * @see #styleDateTime(String)\n\t\t */\n\t\t@ParameterizedTest(name = \"input date: {0}\")  // gh-33151\n\t\t@ValueSource(strings = {\"10/31/09 3:45 PM\", \"10/31/09 3:45\\u202FPM\"})\n\t\tvoid patternDateTime_PreAndPostJdk20(String propertyValue) {\n\t\t\tString propertyName = \"patternDateTimeWithFallbackPatternForPreAndPostJdk20\";\n\t\t\tMutablePropertyValues propertyValues = new MutablePropertyValues();\n\t\t\tpropertyValues.add(propertyName, propertyValue);\n\t\t\tbinder.bind(propertyValues);\n\t\t\tBindingResult bindingResult = binder.getBindingResult();\n\t\t\tassertThat(bindingResult.getErrorCount()).isEqualTo(0);\n\t\t\tString value = binder.getBindingResult().getFieldValue(propertyName).toString();\n\t\t\t// Since the \"MM/dd/yy h:mm a\" primary pattern is always used for printing, we\n\t\t\t// can be certain that a normal space is used before the \"PM\".\n\t\t\tassertThat(value).matches(\"10/31/09 3:45 PM\");\n\t\t}","isContext":false,"isAggregator":false,"aggregatorId":"SingularPattern-15707-17148-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-11370-18712-TypeDeclaration-SingularPattern-15707-17148-MethodDeclaration","content":"FallbackPatternTests","isContext":true,"isAggregator":false,"aggregatorId":"SingularPattern-15707-17148-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-SingularPattern-15707-17148-MethodDeclaration","content":"DateFormattingTests","isContext":true,"isAggregator":false,"aggregatorId":"SingularPattern-15707-17148-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-0-23766-CompilationUnit-SingularPattern-15707-17148-MethodDeclaration","content":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java","isContext":true,"isAggregator":false,"aggregatorId":"SingularPattern-15707-17148-MethodDeclaration"},{"id":"SingularPattern-15707-17148-MethodDeclaration","content":"/**\n\t\t * To avoid the use of Locale-based styles (such as \"MM\") for\n\t\t * {@link SimpleDateBean#patternDateTimeWithFallbackPatternForPreAndPostJdk20}, we have configured a\n\t\t * primary pattern (<code>\"MM/dd/yy h:mm a\"</code>) that matches against a standard space\n\t\t * before the \"PM\" and a fallback pattern (<code>\"MM/dd/yy h:mm&#92;u202Fa\"</code> that matches\n\t\t * against a narrow non-breaking space (NNBSP) before the \"PM\".\n\t\t *\n\t\t * <p>Thus, the following should theoretically be supported on any JDK (or at least\n\t\t * JDK 17 - 23, where we have tested it).\n\t\t *\n\t\t * @see #styleDateTime(String)\n\t\t */\n\t\t@ParameterizedTest(name = \"input date: {0}\")  // gh-33151\n\t\t@ValueSource(strings = {\"10/31/09 3:45 PM\", \"10/31/09 3:45\\u202FPM\"})\n\t\tvoid patternDateTime_PreAndPostJdk20(String propertyValue) {\n\t\t\tString propertyName = \"patternDateTimeWithFallbackPatternForPreAndPostJdk20\";\n\t\t\tMutablePropertyValues propertyValues = new MutablePropertyValues();\n\t\t\tpropertyValues.add(propertyName, propertyValue);\n\t\t\tbinder.bind(propertyValues);\n\t\t\tBindingResult bindingResult = binder.getBindingResult();\n\t\t\tassertThat(bindingResult.getErrorCount()).isEqualTo(0);\n\t\t\tString value = binder.getBindingResult().getFieldValue(propertyName).toString();\n\t\t\t// Since the \"MM/dd/yy h:mm a\" primary pattern is always used for printing, we\n\t\t\t// can be certain that a normal space is used before the \"PM\".\n\t\t\tassertThat(value).matches(\"10/31/09 3:45 PM\");\n\t\t}\nIN\nTYPE \"FallbackPatternTests\"\nIN\nTYPE \"DateFormattingTests\"\nIN\nFILE \"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java\"","isContext":false,"isAggregator":true},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-13747-15703-MethodDeclaration-SingularPattern-13747-15703-MethodDeclaration","content":"/**\n\t\t * {@link SimpleDateBean#styleDateTimeWithFallbackPatternsForPreAndPostJdk20}\n\t\t * configures \"SS\" as the date/time style to use. Thus, we have to be aware\n\t\t * of the following if we do not configure fallback patterns for parsing.\n\t\t *\n\t\t * <ul>\n\t\t * <li>JDK &le; 19 requires a standard space before the \"PM\".\n\t\t * <li>JDK &ge; 20 requires a narrow non-breaking space (NNBSP) before the \"PM\".\n\t\t * </ul>\n\t\t *\n\t\t * <p>To avoid compatibility issues between JDK versions, we have configured\n\t\t * two fallback patterns which emulate the \"SS\" style: <code>\"MM/dd/yy h:mm a\"</code>\n\t\t * matches against a standard space before the \"PM\", and <code>\"MM/dd/yy h:mm&#92;u202Fa\"</code>\n\t\t * matches against a narrow non-breaking space (NNBSP) before the \"PM\".\n\t\t *\n\t\t * <p>Thus, the following should theoretically be supported on any JDK (or at least\n\t\t * JDK 17 - 23, where we have tested it).\n\t\t *\n\t\t * @see #patternDateTime(String)\n\t\t */\n\t\t@ParameterizedTest(name = \"input date: {0}\")  // gh-33151\n\t\t@ValueSource(strings = {\"10/31/09, 12:00 PM\", \"10/31/09, 12:00\\u202FPM\"})\n\t\tvoid styleDateTime_PreAndPostJdk20(String propertyValue) {\n\t\t\tString propertyName = \"styleDateTimeWithFallbackPatternsForPreAndPostJdk20\";\n\t\t\tMutablePropertyValues propertyValues = new MutablePropertyValues();\n\t\t\tpropertyValues.add(propertyName, propertyValue);\n\t\t\tbinder.bind(propertyValues);\n\t\t\tBindingResult bindingResult = binder.getBindingResult();\n\t\t\tassertThat(bindingResult.getErrorCount()).isEqualTo(0);\n\t\t\tString value = binder.getBindingResult().getFieldValue(propertyName).toString();\n\t\t\t// Since the \"SS\" style is always used for printing and the underlying format\n\t\t\t// changes depending on the JDK version, we cannot be certain that a normal\n\t\t\t// space is used before the \"PM\". Consequently we have to use a regular\n\t\t\t// expression to match against any Unicode space character (\\p{Zs}).\n\t\t\tassertThat(value).startsWith(\"10/31/09\").matches(\".+?12:00\\\\p{Zs}PM\");\n\t\t}","isContext":false,"isAggregator":false,"aggregatorId":"SingularPattern-13747-15703-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-11370-18712-TypeDeclaration-SingularPattern-13747-15703-MethodDeclaration","content":"FallbackPatternTests","isContext":true,"isAggregator":false,"aggregatorId":"SingularPattern-13747-15703-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-SingularPattern-13747-15703-MethodDeclaration","content":"DateFormattingTests","isContext":true,"isAggregator":false,"aggregatorId":"SingularPattern-13747-15703-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-0-23766-CompilationUnit-SingularPattern-13747-15703-MethodDeclaration","content":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java","isContext":true,"isAggregator":false,"aggregatorId":"SingularPattern-13747-15703-MethodDeclaration"},{"id":"SingularPattern-13747-15703-MethodDeclaration","content":"/**\n\t\t * {@link SimpleDateBean#styleDateTimeWithFallbackPatternsForPreAndPostJdk20}\n\t\t * configures \"SS\" as the date/time style to use. Thus, we have to be aware\n\t\t * of the following if we do not configure fallback patterns for parsing.\n\t\t *\n\t\t * <ul>\n\t\t * <li>JDK &le; 19 requires a standard space before the \"PM\".\n\t\t * <li>JDK &ge; 20 requires a narrow non-breaking space (NNBSP) before the \"PM\".\n\t\t * </ul>\n\t\t *\n\t\t * <p>To avoid compatibility issues between JDK versions, we have configured\n\t\t * two fallback patterns which emulate the \"SS\" style: <code>\"MM/dd/yy h:mm a\"</code>\n\t\t * matches against a standard space before the \"PM\", and <code>\"MM/dd/yy h:mm&#92;u202Fa\"</code>\n\t\t * matches against a narrow non-breaking space (NNBSP) before the \"PM\".\n\t\t *\n\t\t * <p>Thus, the following should theoretically be supported on any JDK (or at least\n\t\t * JDK 17 - 23, where we have tested it).\n\t\t *\n\t\t * @see #patternDateTime(String)\n\t\t */\n\t\t@ParameterizedTest(name = \"input date: {0}\")  // gh-33151\n\t\t@ValueSource(strings = {\"10/31/09, 12:00 PM\", \"10/31/09, 12:00\\u202FPM\"})\n\t\tvoid styleDateTime_PreAndPostJdk20(String propertyValue) {\n\t\t\tString propertyName = \"styleDateTimeWithFallbackPatternsForPreAndPostJdk20\";\n\t\t\tMutablePropertyValues propertyValues = new MutablePropertyValues();\n\t\t\tpropertyValues.add(propertyName, propertyValue);\n\t\t\tbinder.bind(propertyValues);\n\t\t\tBindingResult bindingResult = binder.getBindingResult();\n\t\t\tassertThat(bindingResult.getErrorCount()).isEqualTo(0);\n\t\t\tString value = binder.getBindingResult().getFieldValue(propertyName).toString();\n\t\t\t// Since the \"SS\" style is always used for printing and the underlying format\n\t\t\t// changes depending on the JDK version, we cannot be certain that a normal\n\t\t\t// space is used before the \"PM\". Consequently we have to use a regular\n\t\t\t// expression to match against any Unicode space character (\\p{Zs}).\n\t\t\tassertThat(value).startsWith(\"10/31/09\").matches(\".+?12:00\\\\p{Zs}PM\");\n\t\t}\nIN\nTYPE \"FallbackPatternTests\"\nIN\nTYPE \"DateFormattingTests\"\nIN\nFILE \"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java\"","isContext":false,"isAggregator":true},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-21793-21935-MethodDeclaration-SingularPattern-21793-21935-MethodDeclaration","content":"public Date getStyleDateTimeWithFallbackPatternsForPreAndPostJdk20() {\n\t\t\treturn this.styleDateTimeWithFallbackPatternsForPreAndPostJdk20;\n\t\t}","isContext":false,"isAggregator":false,"aggregatorId":"SingularPattern-21793-21935-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-SingularPattern-21793-21935-MethodDeclaration","content":"SimpleDateBean","isContext":true,"isAggregator":false,"aggregatorId":"SingularPattern-21793-21935-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-SingularPattern-21793-21935-MethodDeclaration","content":"DateFormattingTests","isContext":true,"isAggregator":false,"aggregatorId":"SingularPattern-21793-21935-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-0-23766-CompilationUnit-SingularPattern-21793-21935-MethodDeclaration","content":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java","isContext":true,"isAggregator":false,"aggregatorId":"SingularPattern-21793-21935-MethodDeclaration"},{"id":"SingularPattern-21793-21935-MethodDeclaration","content":"public Date getStyleDateTimeWithFallbackPatternsForPreAndPostJdk20() {\n\t\t\treturn this.styleDateTimeWithFallbackPatternsForPreAndPostJdk20;\n\t\t}\nIN\nTYPE \"SimpleDateBean\"\nIN\nTYPE \"DateFormattingTests\"\nIN\nFILE \"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java\"","isContext":false,"isAggregator":true},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-33590-33739-MethodDeclaration-SingularPattern-33590-33739-MethodDeclaration","content":"public LocalTime getStyleLocalTimeWithFallbackPatternsForPreAndPostJdk20() {\n\t\t\treturn this.styleLocalTimeWithFallbackPatternsForPreAndPostJdk20;\n\t\t}","isContext":false,"isAggregator":false,"aggregatorId":"SingularPattern-33590-33739-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration-SingularPattern-33590-33739-MethodDeclaration","content":"DateTimeBean","isContext":true,"isAggregator":false,"aggregatorId":"SingularPattern-33590-33739-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-2458-37167-TypeDeclaration-SingularPattern-33590-33739-MethodDeclaration","content":"DateTimeFormattingTests","isContext":true,"isAggregator":false,"aggregatorId":"SingularPattern-33590-33739-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-0-37168-CompilationUnit-SingularPattern-33590-33739-MethodDeclaration","content":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java","isContext":true,"isAggregator":false,"aggregatorId":"SingularPattern-33590-33739-MethodDeclaration"},{"id":"SingularPattern-33590-33739-MethodDeclaration","content":"public LocalTime getStyleLocalTimeWithFallbackPatternsForPreAndPostJdk20() {\n\t\t\treturn this.styleLocalTimeWithFallbackPatternsForPreAndPostJdk20;\n\t\t}\nIN\nTYPE \"DateTimeBean\"\nIN\nTYPE \"DateTimeFormattingTests\"\nIN\nFILE \"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java\"","isContext":false,"isAggregator":true},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-33743-34002-MethodDeclaration-UsagePattern-33743-34002-MethodDeclaration","content":"public void setStyleLocalTimeWithFallbackPatternsForPreAndPostJdk20(\n\t\t\t\tLocalTime styleLocalTimeWithFallbackPatternsForPreAndPostJdk20) {\n\t\t\tthis.styleLocalTimeWithFallbackPatternsForPreAndPostJdk20 = styleLocalTimeWithFallbackPatternsForPreAndPostJdk20;\n\t\t}","isContext":false,"isAggregator":false,"aggregatorId":"UsagePattern-33743-34002-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration-UsagePattern-33743-34002-MethodDeclaration","content":"DateTimeBean","isContext":true,"isAggregator":false,"aggregatorId":"UsagePattern-33743-34002-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-2458-37167-TypeDeclaration-UsagePattern-33743-34002-MethodDeclaration","content":"DateTimeFormattingTests","isContext":true,"isAggregator":false,"aggregatorId":"UsagePattern-33743-34002-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-0-37168-CompilationUnit-UsagePattern-33743-34002-MethodDeclaration","content":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java","isContext":true,"isAggregator":false,"aggregatorId":"UsagePattern-33743-34002-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30741-30898-FieldDeclaration-UsagePattern-33743-34002-MethodDeclaration","content":"@DateTimeFormat(style = \"-M\", fallbackPatterns = {\"HH:mm:ss a\", \"HH:mm:ss\\u202Fa\"})\n\t\tprivate LocalTime styleLocalTimeWithFallbackPatternsForPreAndPostJdk20;","isContext":false,"isAggregator":false,"aggregatorId":"UsagePattern-33743-34002-MethodDeclaration"},{"id":"UsagePattern-33743-34002-MethodDeclaration","content":"public void setStyleLocalTimeWithFallbackPatternsForPreAndPostJdk20(\n\t\t\t\tLocalTime styleLocalTimeWithFallbackPatternsForPreAndPostJdk20) {\n\t\t\tthis.styleLocalTimeWithFallbackPatternsForPreAndPostJdk20 = styleLocalTimeWithFallbackPatternsForPreAndPostJdk20;\n\t\t}\nIN\nTYPE \"DateTimeBean\"\nIN\nTYPE \"DateTimeFormattingTests\"\nIN\nFILE \"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java\"\n\n---\n\nDECLARATIONS:\n\n@DateTimeFormat(style = \"-M\", fallbackPatterns = {\"HH:mm:ss a\", \"HH:mm:ss\\u202Fa\"})\n\t\tprivate LocalTime styleLocalTimeWithFallbackPatternsForPreAndPostJdk20;\nIN\nTYPE \"DateTimeBean\"\nIN\nTYPE \"DateTimeFormattingTests\"\nIN\nFILE \"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java\"","isContext":false,"isAggregator":true,"aggregatorId":"TraversalComponent-30741-30898-FieldDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30499-30597-LineComment-CommentPattern-30499-30597-LineComment","content":"// \"-M\" style matches either a standard space or a narrow non-breaking space (NNBSP) before AM/PM,","isContext":false,"isAggregator":false,"aggregatorId":"CommentPattern-30499-30597-LineComment"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30600-30639-LineComment-CommentPattern-30499-30597-LineComment","content":"// depending on the version of the JDK.","isContext":false,"isAggregator":false,"aggregatorId":"CommentPattern-30499-30597-LineComment"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration-CommentPattern-30499-30597-LineComment","content":"DateTimeBean","isContext":true,"isAggregator":false,"aggregatorId":"CommentPattern-30499-30597-LineComment"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-2458-37167-TypeDeclaration-CommentPattern-30499-30597-LineComment","content":"DateTimeFormattingTests","isContext":true,"isAggregator":false,"aggregatorId":"CommentPattern-30499-30597-LineComment"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-0-37168-CompilationUnit-CommentPattern-30499-30597-LineComment","content":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java","isContext":true,"isAggregator":false,"aggregatorId":"CommentPattern-30499-30597-LineComment"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30642-30738-LineComment-CommentPattern-30499-30597-LineComment","content":"// Fallback patterns match a standard space OR a narrow non-breaking space (NNBSP) before AM/PM.","isContext":false,"isAggregator":false,"aggregatorId":"CommentPattern-30499-30597-LineComment"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30741-30898-FieldDeclaration-CommentPattern-30499-30597-LineComment","content":"@DateTimeFormat(style = \"-M\", fallbackPatterns = {\"HH:mm:ss a\", \"HH:mm:ss\\u202Fa\"})\n\t\tprivate LocalTime styleLocalTimeWithFallbackPatternsForPreAndPostJdk20;","isContext":false,"isAggregator":false,"aggregatorId":"CommentPattern-30499-30597-LineComment"},{"id":"CommentPattern-30499-30597-LineComment","content":"// \"-M\" style matches either a standard space or a narrow non-breaking space (NNBSP) before AM/PM,\n// depending on the version of the JDK.\n// Fallback patterns match a standard space OR a narrow non-breaking space (NNBSP) before AM/PM.\n@DateTimeFormat(style = \"-M\", fallbackPatterns = {\"HH:mm:ss a\", \"HH:mm:ss\\u202Fa\"})\n\t\tprivate LocalTime styleLocalTimeWithFallbackPatternsForPreAndPostJdk20;\nIN\nTYPE \"DateTimeBean\"\nIN\nTYPE \"DateTimeFormattingTests\"\nIN\nFILE \"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java\"","isContext":false,"isAggregator":true,"aggregatorId":"TraversalComponent-30741-30898-FieldDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30741-30898-FieldDeclaration-TraversalComponent-30741-30898-FieldDeclaration","content":"@DateTimeFormat(style = \"-M\", fallbackPatterns = {\"HH:mm:ss a\", \"HH:mm:ss\\u202Fa\"})\n\t\tprivate LocalTime styleLocalTimeWithFallbackPatternsForPreAndPostJdk20;","isContext":false,"isAggregator":false,"aggregatorId":"TraversalComponent-30741-30898-FieldDeclaration"},{"id":"TraversalComponent-30741-30898-FieldDeclaration","content":"","isContext":false,"isAggregator":true},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19886-19943-LineComment-CommentPattern-19886-19943-LineComment","content":"// Primary pattern matches a standard space before AM/PM.","isContext":false,"isAggregator":false,"aggregatorId":"CommentPattern-19886-19943-LineComment"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19946-20023-LineComment-CommentPattern-19886-19943-LineComment","content":"// Fallback pattern matches a narrow non-breaking space (NNBSP) before AM/PM.","isContext":false,"isAggregator":false,"aggregatorId":"CommentPattern-19886-19943-LineComment"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-CommentPattern-19886-19943-LineComment","content":"SimpleDateBean","isContext":true,"isAggregator":false,"aggregatorId":"CommentPattern-19886-19943-LineComment"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-CommentPattern-19886-19943-LineComment","content":"DateFormattingTests","isContext":true,"isAggregator":false,"aggregatorId":"CommentPattern-19886-19943-LineComment"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-0-23766-CompilationUnit-CommentPattern-19886-19943-LineComment","content":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java","isContext":true,"isAggregator":false,"aggregatorId":"CommentPattern-19886-19943-LineComment"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-20026-20182-FieldDeclaration-CommentPattern-19886-19943-LineComment","content":"@DateTimeFormat(pattern = \"MM/dd/yy h:mm a\", fallbackPatterns = \"MM/dd/yy h:mm\\u202Fa\")\n\t\tprivate Date patternDateTimeWithFallbackPatternForPreAndPostJdk20;","isContext":false,"isAggregator":false,"aggregatorId":"CommentPattern-19886-19943-LineComment"},{"id":"CommentPattern-19886-19943-LineComment","content":"// Primary pattern matches a standard space before AM/PM.\n// Fallback pattern matches a narrow non-breaking space (NNBSP) before AM/PM.\n@DateTimeFormat(pattern = \"MM/dd/yy h:mm a\", fallbackPatterns = \"MM/dd/yy h:mm\\u202Fa\")\n\t\tprivate Date patternDateTimeWithFallbackPatternForPreAndPostJdk20;\nIN\nTYPE \"SimpleDateBean\"\nIN\nTYPE \"DateFormattingTests\"\nIN\nFILE \"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java\"","isContext":false,"isAggregator":true,"aggregatorId":"TraversalComponent-20026-20182-FieldDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-22766-23015-MethodDeclaration-UsagePattern-22766-23015-MethodDeclaration","content":"public void setPatternDateTimeWithFallbackPatternForPreAndPostJdk20(Date patternDateTimeWithFallbackPatternForPreAndPostJdk20) {\n\t\t\tthis.patternDateTimeWithFallbackPatternForPreAndPostJdk20 = patternDateTimeWithFallbackPatternForPreAndPostJdk20;\n\t\t}","isContext":false,"isAggregator":false,"aggregatorId":"UsagePattern-22766-23015-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-UsagePattern-22766-23015-MethodDeclaration","content":"SimpleDateBean","isContext":true,"isAggregator":false,"aggregatorId":"UsagePattern-22766-23015-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-UsagePattern-22766-23015-MethodDeclaration","content":"DateFormattingTests","isContext":true,"isAggregator":false,"aggregatorId":"UsagePattern-22766-23015-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-0-23766-CompilationUnit-UsagePattern-22766-23015-MethodDeclaration","content":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java","isContext":true,"isAggregator":false,"aggregatorId":"UsagePattern-22766-23015-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-20026-20182-FieldDeclaration-UsagePattern-22766-23015-MethodDeclaration","content":"@DateTimeFormat(pattern = \"MM/dd/yy h:mm a\", fallbackPatterns = \"MM/dd/yy h:mm\\u202Fa\")\n\t\tprivate Date patternDateTimeWithFallbackPatternForPreAndPostJdk20;","isContext":false,"isAggregator":false,"aggregatorId":"UsagePattern-22766-23015-MethodDeclaration"},{"id":"UsagePattern-22766-23015-MethodDeclaration","content":"public void setPatternDateTimeWithFallbackPatternForPreAndPostJdk20(Date patternDateTimeWithFallbackPatternForPreAndPostJdk20) {\n\t\t\tthis.patternDateTimeWithFallbackPatternForPreAndPostJdk20 = patternDateTimeWithFallbackPatternForPreAndPostJdk20;\n\t\t}\nIN\nTYPE \"SimpleDateBean\"\nIN\nTYPE \"DateFormattingTests\"\nIN\nFILE \"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java\"\n\n---\n\nDECLARATIONS:\n\n@DateTimeFormat(pattern = \"MM/dd/yy h:mm a\", fallbackPatterns = \"MM/dd/yy h:mm\\u202Fa\")\n\t\tprivate Date patternDateTimeWithFallbackPatternForPreAndPostJdk20;\nIN\nTYPE \"SimpleDateBean\"\nIN\nTYPE \"DateFormattingTests\"\nIN\nFILE \"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java\"","isContext":false,"isAggregator":true,"aggregatorId":"TraversalComponent-20026-20182-FieldDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-20026-20182-FieldDeclaration-TraversalComponent-20026-20182-FieldDeclaration","content":"@DateTimeFormat(pattern = \"MM/dd/yy h:mm a\", fallbackPatterns = \"MM/dd/yy h:mm\\u202Fa\")\n\t\tprivate Date patternDateTimeWithFallbackPatternForPreAndPostJdk20;","isContext":false,"isAggregator":false,"aggregatorId":"TraversalComponent-20026-20182-FieldDeclaration"},{"id":"TraversalComponent-20026-20182-FieldDeclaration","content":"","isContext":false,"isAggregator":true},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19257-19355-LineComment-CommentPattern-19257-19355-LineComment","content":"// \"SS\" style matches either a standard space or a narrow non-breaking space (NNBSP) before AM/PM,","isContext":false,"isAggregator":false,"aggregatorId":"CommentPattern-19257-19355-LineComment"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19358-19397-LineComment-CommentPattern-19257-19355-LineComment","content":"// depending on the version of the JDK.","isContext":false,"isAggregator":false,"aggregatorId":"CommentPattern-19257-19355-LineComment"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-CommentPattern-19257-19355-LineComment","content":"SimpleDateBean","isContext":true,"isAggregator":false,"aggregatorId":"CommentPattern-19257-19355-LineComment"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-CommentPattern-19257-19355-LineComment","content":"DateFormattingTests","isContext":true,"isAggregator":false,"aggregatorId":"CommentPattern-19257-19355-LineComment"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-0-23766-CompilationUnit-CommentPattern-19257-19355-LineComment","content":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java","isContext":true,"isAggregator":false,"aggregatorId":"CommentPattern-19257-19355-LineComment"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19400-19496-LineComment-CommentPattern-19257-19355-LineComment","content":"// Fallback patterns match a standard space OR a narrow non-breaking space (NNBSP) before AM/PM.","isContext":false,"isAggregator":false,"aggregatorId":"CommentPattern-19257-19355-LineComment"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19499-19660-FieldDeclaration-CommentPattern-19257-19355-LineComment","content":"@DateTimeFormat(style = \"SS\", fallbackPatterns = { \"M/d/yy, h:mm a\", \"M/d/yy, h:mm\\u202Fa\" })\n\t\tprivate Date styleDateTimeWithFallbackPatternsForPreAndPostJdk20;","isContext":false,"isAggregator":false,"aggregatorId":"CommentPattern-19257-19355-LineComment"},{"id":"CommentPattern-19257-19355-LineComment","content":"// \"SS\" style matches either a standard space or a narrow non-breaking space (NNBSP) before AM/PM,\n// depending on the version of the JDK.\n// Fallback patterns match a standard space OR a narrow non-breaking space (NNBSP) before AM/PM.\n@DateTimeFormat(style = \"SS\", fallbackPatterns = { \"M/d/yy, h:mm a\", \"M/d/yy, h:mm\\u202Fa\" })\n\t\tprivate Date styleDateTimeWithFallbackPatternsForPreAndPostJdk20;\nIN\nTYPE \"SimpleDateBean\"\nIN\nTYPE \"DateFormattingTests\"\nIN\nFILE \"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java\"","isContext":false,"isAggregator":true,"aggregatorId":"TraversalComponent-19499-19660-FieldDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-21939-22184-MethodDeclaration-UsagePattern-21939-22184-MethodDeclaration","content":"public void setStyleDateTimeWithFallbackPatternsForPreAndPostJdk20(Date styleDateTimeWithFallbackPatternsForPreAndPostJdk20) {\n\t\t\tthis.styleDateTimeWithFallbackPatternsForPreAndPostJdk20 = styleDateTimeWithFallbackPatternsForPreAndPostJdk20;\n\t\t}","isContext":false,"isAggregator":false,"aggregatorId":"UsagePattern-21939-22184-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-UsagePattern-21939-22184-MethodDeclaration","content":"SimpleDateBean","isContext":true,"isAggregator":false,"aggregatorId":"UsagePattern-21939-22184-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-UsagePattern-21939-22184-MethodDeclaration","content":"DateFormattingTests","isContext":true,"isAggregator":false,"aggregatorId":"UsagePattern-21939-22184-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-0-23766-CompilationUnit-UsagePattern-21939-22184-MethodDeclaration","content":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java","isContext":true,"isAggregator":false,"aggregatorId":"UsagePattern-21939-22184-MethodDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19499-19660-FieldDeclaration-UsagePattern-21939-22184-MethodDeclaration","content":"@DateTimeFormat(style = \"SS\", fallbackPatterns = { \"M/d/yy, h:mm a\", \"M/d/yy, h:mm\\u202Fa\" })\n\t\tprivate Date styleDateTimeWithFallbackPatternsForPreAndPostJdk20;","isContext":false,"isAggregator":false,"aggregatorId":"UsagePattern-21939-22184-MethodDeclaration"},{"id":"UsagePattern-21939-22184-MethodDeclaration","content":"public void setStyleDateTimeWithFallbackPatternsForPreAndPostJdk20(Date styleDateTimeWithFallbackPatternsForPreAndPostJdk20) {\n\t\t\tthis.styleDateTimeWithFallbackPatternsForPreAndPostJdk20 = styleDateTimeWithFallbackPatternsForPreAndPostJdk20;\n\t\t}\nIN\nTYPE \"SimpleDateBean\"\nIN\nTYPE \"DateFormattingTests\"\nIN\nFILE \"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java\"\n\n---\n\nDECLARATIONS:\n\n@DateTimeFormat(style = \"SS\", fallbackPatterns = { \"M/d/yy, h:mm a\", \"M/d/yy, h:mm\\u202Fa\" })\n\t\tprivate Date styleDateTimeWithFallbackPatternsForPreAndPostJdk20;\nIN\nTYPE \"SimpleDateBean\"\nIN\nTYPE \"DateFormattingTests\"\nIN\nFILE \"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java\"","isContext":false,"isAggregator":true,"aggregatorId":"TraversalComponent-19499-19660-FieldDeclaration"},{"id":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19499-19660-FieldDeclaration-TraversalComponent-19499-19660-FieldDeclaration","content":"@DateTimeFormat(style = \"SS\", fallbackPatterns = { \"M/d/yy, h:mm a\", \"M/d/yy, h:mm\\u202Fa\" })\n\t\tprivate Date styleDateTimeWithFallbackPatternsForPreAndPostJdk20;","isContext":false,"isAggregator":false,"aggregatorId":"TraversalComponent-19499-19660-FieldDeclaration"},{"id":"TraversalComponent-19499-19660-FieldDeclaration","content":"","isContext":false,"isAggregator":true}],"edges":[{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-25224-27091-MethodDeclaration-SingularPattern-25224-27091-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-22817-29816-TypeDeclaration-SingularPattern-25224-27091-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-22817-29816-TypeDeclaration-SingularPattern-25224-27091-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-2458-37167-TypeDeclaration-SingularPattern-25224-27091-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-2458-37167-TypeDeclaration-SingularPattern-25224-27091-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-0-37168-CompilationUnit-SingularPattern-25224-27091-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"SingularPattern-25224-27091-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-25224-27091-MethodDeclaration-SingularPattern-25224-27091-MethodDeclaration","type":"EXPANSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-22618-22762-MethodDeclaration-SingularPattern-22618-22762-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-SingularPattern-22618-22762-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-SingularPattern-22618-22762-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-SingularPattern-22618-22762-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-SingularPattern-22618-22762-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-0-23766-CompilationUnit-SingularPattern-22618-22762-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"SingularPattern-22618-22762-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-22618-22762-MethodDeclaration-SingularPattern-22618-22762-MethodDeclaration","type":"EXPANSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-15707-17148-MethodDeclaration-SingularPattern-15707-17148-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-11370-18712-TypeDeclaration-SingularPattern-15707-17148-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-11370-18712-TypeDeclaration-SingularPattern-15707-17148-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-SingularPattern-15707-17148-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-SingularPattern-15707-17148-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-0-23766-CompilationUnit-SingularPattern-15707-17148-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"SingularPattern-15707-17148-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-15707-17148-MethodDeclaration-SingularPattern-15707-17148-MethodDeclaration","type":"EXPANSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-13747-15703-MethodDeclaration-SingularPattern-13747-15703-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-11370-18712-TypeDeclaration-SingularPattern-13747-15703-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-11370-18712-TypeDeclaration-SingularPattern-13747-15703-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-SingularPattern-13747-15703-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-SingularPattern-13747-15703-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-0-23766-CompilationUnit-SingularPattern-13747-15703-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"SingularPattern-13747-15703-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-13747-15703-MethodDeclaration-SingularPattern-13747-15703-MethodDeclaration","type":"EXPANSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-21793-21935-MethodDeclaration-SingularPattern-21793-21935-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-SingularPattern-21793-21935-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-SingularPattern-21793-21935-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-SingularPattern-21793-21935-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-SingularPattern-21793-21935-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-0-23766-CompilationUnit-SingularPattern-21793-21935-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"SingularPattern-21793-21935-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-21793-21935-MethodDeclaration-SingularPattern-21793-21935-MethodDeclaration","type":"EXPANSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-33590-33739-MethodDeclaration-SingularPattern-33590-33739-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration-SingularPattern-33590-33739-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration-SingularPattern-33590-33739-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-2458-37167-TypeDeclaration-SingularPattern-33590-33739-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-2458-37167-TypeDeclaration-SingularPattern-33590-33739-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-0-37168-CompilationUnit-SingularPattern-33590-33739-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"SingularPattern-33590-33739-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-33590-33739-MethodDeclaration-SingularPattern-33590-33739-MethodDeclaration","type":"EXPANSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-33743-34002-MethodDeclaration-UsagePattern-33743-34002-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration-UsagePattern-33743-34002-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration-UsagePattern-33743-34002-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-2458-37167-TypeDeclaration-UsagePattern-33743-34002-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-2458-37167-TypeDeclaration-UsagePattern-33743-34002-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-0-37168-CompilationUnit-UsagePattern-33743-34002-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30741-30898-FieldDeclaration-UsagePattern-33743-34002-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-33743-34002-MethodDeclaration-UsagePattern-33743-34002-MethodDeclaration","type":"DEF_USE","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30741-30898-FieldDeclaration-UsagePattern-33743-34002-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration-UsagePattern-33743-34002-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"UsagePattern-33743-34002-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-33743-34002-MethodDeclaration-UsagePattern-33743-34002-MethodDeclaration","type":"EXPANSION","weight":1.0},{"sourceId":"TraversalComponent-30741-30898-FieldDeclaration","targetId":"UsagePattern-33743-34002-MethodDeclaration","type":"EXPANSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30499-30597-LineComment-CommentPattern-30499-30597-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30600-30639-LineComment-CommentPattern-30499-30597-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30499-30597-LineComment-CommentPattern-30499-30597-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration-CommentPattern-30499-30597-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30600-30639-LineComment-CommentPattern-30499-30597-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration-CommentPattern-30499-30597-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30600-30639-LineComment-CommentPattern-30499-30597-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30642-30738-LineComment-CommentPattern-30499-30597-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration-CommentPattern-30499-30597-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-2458-37167-TypeDeclaration-CommentPattern-30499-30597-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-2458-37167-TypeDeclaration-CommentPattern-30499-30597-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-0-37168-CompilationUnit-CommentPattern-30499-30597-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30642-30738-LineComment-CommentPattern-30499-30597-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration-CommentPattern-30499-30597-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30642-30738-LineComment-CommentPattern-30499-30597-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30741-30898-FieldDeclaration-CommentPattern-30499-30597-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30741-30898-FieldDeclaration-CommentPattern-30499-30597-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-29820-37164-TypeDeclaration-CommentPattern-30499-30597-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"CommentPattern-30499-30597-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30499-30597-LineComment-CommentPattern-30499-30597-LineComment","type":"EXPANSION","weight":1.0},{"sourceId":"TraversalComponent-30741-30898-FieldDeclaration","targetId":"CommentPattern-30499-30597-LineComment","type":"EXPANSION","weight":1.0},{"sourceId":"TraversalComponent-30741-30898-FieldDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java-30741-30898-FieldDeclaration-TraversalComponent-30741-30898-FieldDeclaration","type":"EXPANSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19886-19943-LineComment-CommentPattern-19886-19943-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19946-20023-LineComment-CommentPattern-19886-19943-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19886-19943-LineComment-CommentPattern-19886-19943-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-CommentPattern-19886-19943-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19946-20023-LineComment-CommentPattern-19886-19943-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-CommentPattern-19886-19943-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19946-20023-LineComment-CommentPattern-19886-19943-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-20026-20182-FieldDeclaration-CommentPattern-19886-19943-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-CommentPattern-19886-19943-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-CommentPattern-19886-19943-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-CommentPattern-19886-19943-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-0-23766-CompilationUnit-CommentPattern-19886-19943-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-20026-20182-FieldDeclaration-CommentPattern-19886-19943-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-CommentPattern-19886-19943-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"CommentPattern-19886-19943-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19886-19943-LineComment-CommentPattern-19886-19943-LineComment","type":"EXPANSION","weight":1.0},{"sourceId":"TraversalComponent-20026-20182-FieldDeclaration","targetId":"CommentPattern-19886-19943-LineComment","type":"EXPANSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-22766-23015-MethodDeclaration-UsagePattern-22766-23015-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-UsagePattern-22766-23015-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-UsagePattern-22766-23015-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-UsagePattern-22766-23015-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-UsagePattern-22766-23015-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-0-23766-CompilationUnit-UsagePattern-22766-23015-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-20026-20182-FieldDeclaration-UsagePattern-22766-23015-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-22766-23015-MethodDeclaration-UsagePattern-22766-23015-MethodDeclaration","type":"DEF_USE","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-20026-20182-FieldDeclaration-UsagePattern-22766-23015-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-UsagePattern-22766-23015-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"UsagePattern-22766-23015-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-22766-23015-MethodDeclaration-UsagePattern-22766-23015-MethodDeclaration","type":"EXPANSION","weight":1.0},{"sourceId":"TraversalComponent-20026-20182-FieldDeclaration","targetId":"UsagePattern-22766-23015-MethodDeclaration","type":"EXPANSION","weight":1.0},{"sourceId":"TraversalComponent-20026-20182-FieldDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-20026-20182-FieldDeclaration-TraversalComponent-20026-20182-FieldDeclaration","type":"EXPANSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19257-19355-LineComment-CommentPattern-19257-19355-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19358-19397-LineComment-CommentPattern-19257-19355-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19257-19355-LineComment-CommentPattern-19257-19355-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-CommentPattern-19257-19355-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19358-19397-LineComment-CommentPattern-19257-19355-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-CommentPattern-19257-19355-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19358-19397-LineComment-CommentPattern-19257-19355-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19400-19496-LineComment-CommentPattern-19257-19355-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-CommentPattern-19257-19355-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-CommentPattern-19257-19355-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-CommentPattern-19257-19355-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-0-23766-CompilationUnit-CommentPattern-19257-19355-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19400-19496-LineComment-CommentPattern-19257-19355-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-CommentPattern-19257-19355-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19400-19496-LineComment-CommentPattern-19257-19355-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19499-19660-FieldDeclaration-CommentPattern-19257-19355-LineComment","type":"SUCCESSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19499-19660-FieldDeclaration-CommentPattern-19257-19355-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-CommentPattern-19257-19355-LineComment","type":"CONTEXT","weight":1.0},{"sourceId":"CommentPattern-19257-19355-LineComment","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19257-19355-LineComment-CommentPattern-19257-19355-LineComment","type":"EXPANSION","weight":1.0},{"sourceId":"TraversalComponent-19499-19660-FieldDeclaration","targetId":"CommentPattern-19257-19355-LineComment","type":"EXPANSION","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-21939-22184-MethodDeclaration-UsagePattern-21939-22184-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-UsagePattern-21939-22184-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-UsagePattern-21939-22184-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-UsagePattern-21939-22184-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-1907-23765-TypeDeclaration-UsagePattern-21939-22184-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-0-23766-CompilationUnit-UsagePattern-21939-22184-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19499-19660-FieldDeclaration-UsagePattern-21939-22184-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-21939-22184-MethodDeclaration-UsagePattern-21939-22184-MethodDeclaration","type":"DEF_USE","weight":1.0},{"sourceId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19499-19660-FieldDeclaration-UsagePattern-21939-22184-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-18716-23762-TypeDeclaration-UsagePattern-21939-22184-MethodDeclaration","type":"CONTEXT","weight":1.0},{"sourceId":"UsagePattern-21939-22184-MethodDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-21939-22184-MethodDeclaration-UsagePattern-21939-22184-MethodDeclaration","type":"EXPANSION","weight":1.0},{"sourceId":"TraversalComponent-19499-19660-FieldDeclaration","targetId":"UsagePattern-21939-22184-MethodDeclaration","type":"EXPANSION","weight":1.0},{"sourceId":"TraversalComponent-19499-19660-FieldDeclaration","targetId":"spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java-19499-19660-FieldDeclaration-TraversalComponent-19499-19660-FieldDeclaration","type":"EXPANSION","weight":1.0}]}